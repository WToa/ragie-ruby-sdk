name: Generate and Release Ragie Ruby SDK

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

env:
  SDK_PATH: local/ragie_ruby_sdk
  REPO_SDK_PATH: ragie_ruby_sdk
  VERSION_FILE: local/ragie_ruby_sdk/lib/ragie_ruby_sdk/version.rb

jobs:
  generate-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate SDK
        uses: ./.github/actions/generate-sdk

      - name: Compute SDK hash
        id: hash
        run: |
          HASH=$(find ${{ env.SDK_PATH }} -type f -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)
          echo "sdk_hash=$HASH" >> $GITHUB_OUTPUT

      - name: Check for changes
        id: check_changes
        run: |
          LAST_HASH=$(cat .last_sdk_hash 2>/dev/null || echo "")
          if [ "$LAST_HASH" = "${{ steps.hash.outputs.sdk_hash }}" ]; then
            echo "No changes detected in SDK. Skipping release."
            exit 1
          fi

      - name: Update version and hash
        if: steps.check_changes.outcome == 'success'
        uses: ./.github/actions/update-version
        with:
          sdk_hash: ${{ steps.hash.outputs.sdk_hash }}

      - name: Copy generated SDK into repo
        if: steps.check_changes.outcome == 'success'
        run: |
          rm -rf ${{ env.REPO_SDK_PATH }}
          cp -r ${{ env.SDK_PATH }} ${{ env.REPO_SDK_PATH }}

      - name: Commit generated SDK and hash
        if: steps.check_changes.outcome == 'success'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          VERSION=$(grep "VERSION = " local/ragie_ruby_sdk/lib/ragie_ruby_sdk/version.rb | grep -oE "[0-9]+\.[0-9]+\.[0-9]+")
          git add ragie_ruby_sdk .last_sdk_hash
          git commit -m "Update Ragie Ruby SDK to version $VERSION" || echo "No changes to commit"
          git push

      - name: Set up Ruby
        if: steps.check_changes.outcome == 'success'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Publish gem
        if: steps.check_changes.outcome == 'success'
        uses: ./.github/actions/publish-gem
        with:
          repo_sdk_path: ragie_ruby_sdk
          rubygems_api_key: ${{ secrets.RUBYGEMS_API_KEY }}